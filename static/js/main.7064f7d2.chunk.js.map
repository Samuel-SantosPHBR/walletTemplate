{"version":3,"sources":["pages/Login.js","actions/user.js","components/Header.js","actions/wallet.js","components/FormDespesas.js","components/TabelaDespesas.js","pages/Wallet.js","App.js","serviceWorker.js","reducers/user.js","reducers/wallet.js","reducers/index.js","store/index.js","index.js"],"names":["Login","props","state","emailErro","passwordErro","emailRef","React","createRef","handleClickSubmitLogin","bind","handleValidateEmailKeyUp","handleValidatePasswordKeyUp","value","test","this","event","dispatch","preventDefault","checkForSubmit","user","type","payload","loggin","email","current","setState","checkFormatEmail","target","length","to","pathname","className","join","src","alt","onSubmit","e","placeholder","ref","onKeyUp","id","data-testid","disabled","Component","defaultProps","connect","Header","valorTotal","wallet","currentTotal","saveExpense","expense","metodosDePagamento","tagsDespesa","FormDespesas","idRef","valorRef","descricaoRef","moedaRef","pagamentoRef","tagRef","getMoedasFromApI","getDefaultStateLocal","saveExpenseHandler","populeInputsEdit","expenseId","expenseValue","expenseDescription","expenseCurrency","expenseMethod","expenseTag","fetch","then","response","json","results","resultToArray","Object","keys","moedas","filter","element","paylaod","currentExpenseEdit","description","currency","method","tag","exchangeRates","result","isEdit","name","onChange","htmlFor","min","step","map","moeda","key","pagemento","currencies","TabelaDespesas","item","split","parseFloat","ask","toFixed","deleteExpense","selectEditExpense","expenses","getNameCurrency","getCambio","getValueConvert","onClick","editExpensehandle","deleteExpensehandle","Wallet","App","path","exact","Boolean","window","location","hostname","match","initialState","currentId","getTotalValue","valueTotal","forEach","push","parseInt","newEspense","expenseItem","newExpenseAfterDelete","combineReducers","action","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.7064f7d2.chunk.js","sourcesContent":["import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport loggin from '../actions/user';\nimport './Login.css';\n\nconst LIMIT = 6;\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { emailErro: true, passwordErro: true };\n    this.emailRef = React.createRef();\n\n    this.handleClickSubmitLogin = this.handleClickSubmitLogin.bind(this);\n    this.handleValidateEmailKeyUp = this.handleValidateEmailKeyUp.bind(this);\n    this.handleValidatePasswordKeyUp = this.handleValidatePasswordKeyUp.bind(this);\n  }\n\n  checkFormatEmail(value) {\n    const regex = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n    return regex.test(value);\n  }\n\n  checkForSubmit() {\n    const { emailErro, passwordErro } = this.state;\n    return !emailErro && !passwordErro;\n  }\n\n  handleClickSubmitLogin(event) {\n    const { dispatch } = this.props;\n    event.preventDefault();\n    if (this.checkForSubmit()) dispatch(loggin({ email: this.emailRef.current.value }));\n  }\n\n  handleValidateEmailKeyUp(event) {\n    this.setState({\n      emailErro: !this.checkFormatEmail(event.target.value || ''),\n    });\n    return event;\n  }\n\n  handleValidatePasswordKeyUp(event) {\n    this.setState({\n      passwordErro: event.target.value.length < LIMIT,\n    });\n    return event;\n  }\n\n  render() {\n    const { emailErro, passwordErro } = this.state;\n    const { email } = this.props;\n    if (email) return (<Redirect to={ { pathname: '/carteira' } } />);\n    return (\n      <div\n        className={ [\n          'container',\n          'divLogin',\n        ].join(' ') }\n      >\n        <h1>\n          <img\n            src=\"./trybeLogo.png\"\n            alt=\"Logo\"\n            className=\"imgLogin\"\n          />\n          Wallet\n        </h1>\n        <form onSubmit={ (e) => this.handleClickSubmitLogin(e) }>\n          <div>\n            <input\n              className=\"form-control\"\n              type=\"email\"\n              placeholder=\"E-mail\"\n              ref={ this.emailRef }\n              onKeyUp={ (e) => this.handleValidateEmailKeyUp(e) }\n              id=\"email\"\n              data-testid=\"email-input\"\n            />\n          </div>\n          <div>\n            <input\n              className=\"form-control mt-2\"\n              type=\"password\"\n              placeholder=\"Senha\"\n              onKeyUp={ (e) => this.handleValidatePasswordKeyUp(e) }\n              id=\"password\"\n              data-testid=\"password-input\"\n            />\n          </div>\n          <div>\n            <button\n              type=\"submit\"\n              className=\"btn btn-success form-control\"\n              disabled={ emailErro || passwordErro }\n            >\n              Entrar\n            </button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  email: PropTypes.string,\n  dispatch: PropTypes.func.isRequired,\n};\n\nLogin.defaultProps = {\n  email: '',\n};\n\nfunction mapStateToProps(state) {\n  return {\n    email: state.user.email,\n  };\n}\n\nexport default connect(mapStateToProps)(Login);\n","export default function loggin(user) {\n  return {\n    type: 'Login',\n    payload: user,\n  };\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nclass Header extends React.Component {\n  render() {\n    const { email, valorTotal } = this.props;\n    return (\n      <header className=\"navbar navbar-light bg-light\">\n        <img\n          src=\"./trybeLogo.png\"\n          alt=\"Logo\"\n          className=\"me-4 imgLogo\"\n        />\n        <div className=\"d-flex\">\n          <span className=\"me-2\">\n            <b>Email: </b>\n            <span className=\"me-1\" data-testid=\"email-field\">\n              { email || 'exemplo@email.com' }\n            </span>\n          </span>\n          <span className=\"me-4\">\n            <b>Despesa Total: </b>\n            R$\n            <span className=\"me-1\" data-testid=\"total-field\">\n              { valorTotal || '0.00' }\n            </span>\n            <span data-testid=\"header-currency-field\">BRL</span>\n          </span>\n        </div>\n      </header>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    email: state.user.email,\n    valorTotal: state.wallet.currentTotal,\n  };\n}\n\nHeader.propTypes = {\n  email: PropTypes.string,\n  valorTotal: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n};\n\nHeader.defaultProps = {\n  email: 'exemplo@email.com',\n  valorTotal: 0,\n};\n\nexport default connect(mapStateToProps)(Header);\n","export function addMoedas(moedas) {\n  return {\n    type: 'addMoedas',\n    payload: moedas,\n  };\n}\n\nexport function saveExpense(expense) {\n  return {\n    type: 'saveExpense',\n    payload: expense,\n  };\n}\n\nexport function deleteExpense(expense) {\n  return {\n    type: 'deleteExpense',\n    payload: expense,\n  };\n}\n\nexport function selectEditExpense(expense) {\n  return {\n    type: 'selectEditExpense',\n    payload: expense,\n  };\n}\n\nexport const fetchMoeda = () => (dispatch) => {\n  fetch('https://economia.awesomeapi.com.br/json/all').then((response) => {\n    response.json().then((results) => {\n      const resultToArray = Object.keys(results);\n      dispatch(addMoedas({ moedas: resultToArray.filter(\n        (element) => element !== 'USDT' && element !== 'DOGE',\n      ) }));\n    });\n  });\n};\n\nexport const fetchCurrencies = (paylaod) => (dispatch) => {\n  if (paylaod.expense.exchangeRates !== null) dispatch(saveExpense(paylaod));\n  fetch('https://economia.awesomeapi.com.br/json/all')\n    .then((response) => response.json()).then((result) => {\n      paylaod.expense.exchangeRates = result;\n      dispatch(saveExpense(paylaod));\n    });\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { fetchMoeda, fetchCurrencies } from '../actions/wallet';\n\nconst metodosDePagamento = [\n  'Dinheiro',\n  'Cartão de crédito',\n  'Cartão de débito',\n];\n\nconst tagsDespesa = [\n  'Alimentação',\n  'Lazer',\n  'Trabalho',\n  'Transporte',\n  'Saúde',\n];\n\nclass FormDespesas extends React.Component {\n  constructor(props) {\n    super(props);\n    this.idRef = React.createRef();\n    this.valorRef = React.createRef();\n    this.descricaoRef = React.createRef();\n    this.moedaRef = React.createRef();\n    this.pagamentoRef = React.createRef();\n    this.tagRef = React.createRef();\n    this.getMoedasFromApI();\n    this.state = this.getDefaultStateLocal();\n    this.saveExpenseHandler = this.saveExpenseHandler.bind(this);\n  }\n\n  componentDidUpdate() {\n\n  }\n\n  getSnapshotBeforeUpdate() {\n    this.populeInputsEdit();\n    return this.state;\n  }\n\n  getDefaultStateLocal() {\n    return {\n      expenseId: '',\n      expenseValue: '0.00',\n      expenseDescription: '',\n      expenseCurrency: 'USD',\n      expenseMethod: 'Dinheiro',\n      expenseTag: 'Alimentação',\n    };\n  }\n\n  getMoedasFromApI() {\n    const { dispatch } = this.props;\n    dispatch(fetchMoeda());\n  }\n\n  saveExpenseHandler(event) {\n    event.preventDefault();\n    const { dispatch } = this.props;\n    const { currentExpenseEdit } = this.props;\n    const expense = {\n      id: this.idRef.current.value,\n      value: this.valorRef.current.value,\n      description: this.descricaoRef.current.value,\n      currency: this.moedaRef.current.value,\n      method: this.pagamentoRef.current.value,\n      tag: this.tagRef.current.value,\n      exchangeRates: currentExpenseEdit ? currentExpenseEdit.exchangeRates : null,\n    };\n    dispatch(fetchCurrencies({ expense }));\n    this.setState({ ...this.getDefaultStateLocal() });\n    return true;\n  }\n\n  populeInputsEdit() {\n    const { isEdit, currentExpenseEdit } = this.props;\n    if (isEdit && this.idRef.current.value.length < 1 && currentExpenseEdit) {\n      this.setState({\n        expenseId: currentExpenseEdit.id,\n        expenseValue: currentExpenseEdit.value || '0.00',\n        expenseDescription: currentExpenseEdit.description,\n        expenseCurrency: currentExpenseEdit.currency,\n        expenseMethod: currentExpenseEdit.method,\n        expenseTag: currentExpenseEdit.tag,\n      });\n    }\n  }\n\n  render() {\n    const {\n      expenseId,\n      expenseValue,\n      expenseDescription,\n      expenseCurrency,\n      expenseMethod,\n      expenseTag,\n    } = this.state;\n\n    const { isEdit, moedas } = this.props;\n    return (\n      <form\n        className=\"row\"\n        onSubmit={ (e) => this.saveExpenseHandler(e) }\n      >\n        <input\n          type=\"hidden\"\n          name=\"id\"\n          data-testid=\"id-input\"\n          ref={ this.idRef }\n          value={ expenseId }\n          onChange={ (e) => this.setState({ expenseId: e.target.value }) }\n        />\n        <label htmlFor=\"valor\" className=\"col\">\n          Valor:\n          <input\n            className=\"form-control\"\n            name=\"valor\"\n            id=\"valor\"\n            min=\"0.00\"\n            step=\"0.01\"\n            data-testid=\"value-input\"\n            value={ expenseValue || '' }\n            onChange={ (e) => this.setState({ expenseValue: e.target.value }) }\n            type=\"number\"\n            ref={ this.valorRef }\n          />\n        </label>\n        <label htmlFor=\"descricao\" className=\"col\">\n          Descrição:\n          <input\n            name=\"descricao\"\n            className=\"form-control\"\n            id=\"descricao\"\n            min=\"0.00\"\n            step=\"0.01\"\n            type=\"text\"\n            data-testid=\"description-input\"\n            value={ expenseDescription }\n            onChange={ (e) => this.setState({ expenseDescription: e.target.value }) }\n            ref={ this.descricaoRef }\n          />\n        </label>\n        <label htmlFor=\"moeda\" className=\"col\">\n          Moeda:\n          <select\n            name=\"moeda\"\n            id=\"moeda\"\n            className=\"form-control\"\n            data-testid=\"currency-input\"\n            value={ expenseCurrency }\n            onChange={ (e) => this.setState({ expenseCurrency: e.target.value }) }\n            ref={ this.moedaRef }\n          >\n            { moedas.map(\n              (moeda) => <option key={ moeda }>{moeda}</option>,\n            )}\n          </select>\n        </label>\n        <label htmlFor=\"pagamento\" className=\"col\">\n          Método de pagamento:\n          <select\n            name=\"pagamento\"\n            id=\"pagamento\"\n            className=\"form-control\"\n            data-testid=\"method-input\"\n            ref={ this.pagamentoRef }\n            value={ expenseMethod }\n            onChange={ (e) => this.setState({ expenseMethod: e.target.value }) }\n          >\n            {metodosDePagamento.map(\n              (pagemento) => <option key={ pagemento }>{pagemento}</option>,\n            )}\n          </select>\n        </label>\n        <label htmlFor=\"tag-despesa\" className=\"col\">\n          Tag:\n          <select\n            className=\"form-control\"\n            name=\"tag-despesa\"\n            id=\"tag-despesa\"\n            data-testid=\"tag-input\"\n            ref={ this.tagRef }\n            value={ expenseTag }\n            onChange={ (e) => this.setState({ expenseTag: e.target.value }) }\n          >\n            {tagsDespesa.map(\n              (tag) => <option key={ tag }>{ tag }</option>,\n            )}\n          </select>\n        </label>\n        <button\n          type=\"submit\"\n          className={\n            isEdit\n              ? 'btn btn-dark col addEdit'\n              : 'btn btn-primary col addEdit'\n          }\n        >\n          { isEdit ? 'Editar despesa' : 'Adicionar despesa' }\n        </button>\n      </form>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    moedas: state.wallet.currencies,\n    isEdit: state.wallet.isEdit,\n    currentExpenseEdit: state.wallet.currentExpenseEdit,\n  };\n}\n\nFormDespesas.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  moedas: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])),\n  isEdit: PropTypes.bool,\n  currentExpenseEdit: PropTypes.objectOf(PropTypes.any),\n};\n\nFormDespesas.defaultProps = {\n  currentExpenseEdit: {},\n  moedas: [],\n  isEdit: false,\n};\n\nexport default connect(mapStateToProps)(FormDespesas);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport FormDespesas from './FormDespesas';\nimport { deleteExpense, selectEditExpense } from '../actions/wallet';\n\nclass TabelaDespesas extends React.Component {\n  getNameCurrency(item) {\n    if (!item) return '';\n    return item.exchangeRates[item.currency].name.split('/')[0];\n  }\n\n  getValueConvert(item) {\n    if (!item) return '';\n    return (parseFloat(item.value)\n      * parseFloat(item.exchangeRates[item.currency].ask)\n    ).toFixed(2);\n  }\n\n  getCambio(item) {\n    if (!item) return '';\n    return parseFloat(item.exchangeRates[item.currency].ask)\n      .toFixed(2);\n  }\n\n  deleteExpensehandle(expense) {\n    const { dispatch } = this.props;\n    dispatch(deleteExpense({ expense }));\n  }\n\n  editExpensehandle(expense) {\n    const { dispatch } = this.props;\n    dispatch(selectEditExpense({ expense }));\n  }\n\n  render() {\n    const { wallet } = this.props;\n    return (\n      <>\n        <section\n          className={\n            wallet.isEdit\n              ? 'bg-success text-dark'\n              : 'bg-dark text-light'\n          }\n        >\n          <FormDespesas />\n        </section>\n        <table className=\"table\">\n          <thead className=\"table-dark\">\n            <tr>\n              <th>Descrição</th>\n              <th>Tag</th>\n              <th>Método de pagamento</th>\n              <th>Valor</th>\n              <th>Moeda</th>\n              <th>Câmbio utilizado</th>\n              <th>Valor convertido</th>\n              <th>Moeda de conversão</th>\n              <th>Editar/Excluir</th>\n            </tr>\n          </thead>\n          <tbody>\n            {wallet.expenses.map((expense) => (\n              <tr key={ expense.id }>\n                <td>{expense.description}</td>\n                <td>{expense.tag}</td>\n                <td>{expense.method}</td>\n                <td>{expense.value}</td>\n                <td>{this.getNameCurrency(expense)}</td>\n                <td>\n                  {this.getCambio(expense)}\n                </td>\n                <td>{this.getValueConvert(expense)}</td>\n                <td>Real</td>\n                <td>\n                  <button\n                    type=\"button\"\n                    data-testid=\"edit-btn\"\n                    className=\"btn btn-warning me-1\"\n                    onClick={ () => this.editExpensehandle(expense) }\n                  >\n                    Editar\n                  </button>\n                  <button\n                    type=\"button\"\n                    data-testid=\"delete-btn\"\n                    className=\"btn btn-danger\"\n                    onClick={ () => this.deleteExpensehandle(expense) }\n                  >\n                    Excluir\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    wallet: state.wallet,\n  };\n}\n\nTabelaDespesas.propTypes = {\n  wallet: PropTypes.objectOf(PropTypes.any),\n  dispatch: PropTypes.func.isRequired,\n};\n\nTabelaDespesas.defaultProps = {\n  wallet: {},\n};\n\nexport default connect(mapStateToProps)(TabelaDespesas);\n","import React from 'react';\nimport Header from '../components/Header';\nimport TabelaDespesas from '../components/TabelaDespesas';\nimport './Wallet.css';\n\nclass Wallet extends React.Component {\n  render() {\n    return (\n      <>\n        <Header />\n        <TabelaDespesas />\n      </>\n    );\n  }\n}\n\nexport default Wallet;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Login from './pages/Login';\nimport Wallet from './pages/Wallet';\n\nfunction App() {\n  return (\n    <Switch>\n      <Route path=\"/\" exact>\n        <Login />\n      </Route>\n      <Route path=\"/carteira\" exact>\n        <Wallet />\n      </Route>\n    </Switch>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// Esse reducer será responsável por tratar as informações da pessoa usuária\n\nconst initialState = { email: '' };\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n  case 'Login':\n    return { ...state, email: action.payload.email };\n\n  case 'Logout':\n    return { ...state, email: '' };\n\n  default:\n    return state;\n  }\n}\n","// Esse reducer será responsável por tratar o todas as informações relacionadas as despesas\nconst initialState = {\n  currencies: [],\n  expenses: [],\n  currentId: 0,\n  currentTotal: 0,\n  isEdit: false,\n  currentExpenseEdit: null,\n};\n\nfunction getTotalValue(expenses) {\n  let valueTotal = 0.00;\n  if (expenses.length <= 0) return valueTotal;\n  expenses.forEach((expense) => {\n    valueTotal\n      += parseFloat(expense.value)\n      * parseFloat(expense.exchangeRates[expense.currency].ask);\n  });\n  return parseFloat(valueTotal).toFixed(2);\n}\n\nfunction saveExpense(state, payload) {\n  const { expense } = payload;\n  const { expenses } = state;\n  if (expense.id == null || expense.id === '') {\n    expense.id = state.currentId;\n    expenses.push(expense);\n    return {\n      ...state,\n      expenses,\n      isEdit: false,\n      currentId: state.currentId + 1,\n      currentTotal: getTotalValue(expenses),\n      currentExpenseEdit: null,\n    };\n  }\n  expense.id = parseInt(expense.id, 10);\n  const newEspense = expenses.map((expenseItem) => {\n    if (expenseItem.id === expense.id) return expense;\n    return expenseItem;\n  });\n  return {\n    ...state,\n    expenses: newEspense,\n    currentTotal: getTotalValue(newEspense),\n    isEdit: false,\n    currentExpenseEdit: null,\n  };\n}\n\nfunction deleteExpense(state, payload) {\n  const { expense } = payload;\n  const { expenses } = state;\n\n  const newExpenseAfterDelete = expenses.filter(\n    (expenseItem) => expenseItem.id !== expense.id,\n  );\n  return {\n    ...state,\n    expenses: newExpenseAfterDelete,\n    currentTotal: getTotalValue(newExpenseAfterDelete),\n  };\n}\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n  case 'addMoedas':\n    return { ...state, currencies: action.payload.moedas };\n  case 'saveExpense':\n    return saveExpense(state, action.payload);\n  case 'deleteExpense':\n    return deleteExpense(state, action.payload);\n  case 'selectEditExpense':\n    return { ...state, currentExpenseEdit: action.payload.expense, isEdit: true };\n  default:\n    return state;\n  }\n}\n","// import user from './user';\n// import wallet from './wallet';\n\n// Configure os seus reducers.\n// ATENÇÃO: você obrigatoriamente tem que utilizar as chaves \"user\" e \"wallet\" no seu estado global\nimport { combineReducers } from 'redux';\nimport user from './user';\nimport wallet from './wallet';\n\nexport default combineReducers({ user, wallet });\n","import { applyMiddleware, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport combineReducers from '../reducers';\n\nconst store = createStore(\n  combineReducers,\n  applyMiddleware(thunk),\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store';\n\nReactDOM.render(\n  <HashRouter>\n    <Provider store={ store }>\n      <App />\n    </Provider>\n  </HashRouter>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}